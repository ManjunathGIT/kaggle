95 - 80.8814
(95 - 80.8814) / 0.1058
(99 * 0.1058) + 80.8814
(95 - 80.8814) / 0.1058
train = read.csv("train_set.csv")
train = read.csv("train_set.csv")
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
View(train)
View(train)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
avg(train$cost)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
output$id = test$id
output$cost = mean(train$cost)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
output = test$id
output$cost = mean(train$cost)
str(output)
summary(output)
head(output)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
output = test$id
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
output = test$id
head(output)
output$cost = 1
output$cost[:] = 1
output$cost[,] = 1
output = test$id, 1
c(1) * 10
1 * 10
c(2) * 10
output$
cost
output$cost = 1
summary(output)
output = test$id
str(output)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
output = read.csv("../sample_submission.csv")
ouput$cost = output$cost + mean(train$cost)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
mean(train$cost)
test = read.csv("test_set.csv")
output = read.csv("../sample_submission.csv")
output$cost = output$cost + mean(train$cost)
str(output)
write.csv(output, file = "../output1_avg.csv")
write.csv(output, file = "../output1_avg.csv", row.names = FALSE)
write.csv(output, file = "../output1_avg.csv", row.names = FALSE, quote = FALSE)
setwd("/Users/kanna/Sandbox/edx/AnalyticsEdge/")
letters = read.csv("letters_ABPR.csv")
letters$isB = as.factor(letters$letter == "B")
library(caTools)
set.seed(1000)
spl = sample.split(letters$isB, SplitRatio = 0.5)
lettersTrain = subset(letters, spl==TRUE)
lettersTest = subset(letters, spl==FALSE)
table(lettersTest)
table(lettersTest$isB)
1175/(1175 + 383)
CARTb = rpart(isB ~ . - letter, data=train, method="class")
library(rpart)
library(rpart.plot)
CARTb = rpart(isB ~ . - letter, data=train, method="class")
CARTb = rpart(isB ~ . - letter, data=lettersTrain, method="class")
PredictTest = predict(CARTb, newdata = lettersTest, type = "class")
table(lettersTest$isB, PredictTest)
(1118 + 340) / (1118 + 340 + 57 + 43)
set.seed(1000)
library(randomForest)
RFb = randomForest(isB ~ . - letter, data = lettersTrain)
PredictForest = predict(RFb, newdata = lettersTest)
table(lettersTest$isB, PredictForest)
(1165 + 374) / (1165 + 374 + 10 + 9)
summary(letters)
str(letters)
letters$letter = as.factor( letters$letter )
set.seed(2000)
spl = sample.split(letters$letter, SplitRatio = 0.5)
lettersTrain = subset(letters, spl==TRUE)
lettersTest = subset(letters, spl==FALSE)
table(lettersTest$letter)
401/nrow(lettersTest)
CARTb = rpart(isB ~ . - isB, data=lettersTrain, method="class")
PredictTest = predict(CARTb, newdata = lettersTest, type = "class")
table(lettersTest$letter, PredictTest)
CARTb = rpart(letter ~ . - isB, data=lettersTrain, method="class")
PredictTest = predict(CARTb, newdata = lettersTest, type = "class")
table(lettersTest$letter, PredictTest)
(384 + 318 + 363 + 340)/nrow(lettersTest)
(348 + 318 + 363 + 340)/nrow(lettersTest)
RFb = randomForest(letter ~ . - isB, data = lettersTrain)
PredictForest = predict(RFb, newdata = lettersTest)
table(lettersTest$letter, PredictForest)
(391 + 380 + 393 + 365) / nrow(lettersTest)
setwd("/Users/kanna/Sandbox/kaggle/caterpillar_tube_pricing/competition_data/")
# Read the csv file
train = read.csv("train_set.csv")
str(train)
View(train)
test = read.csv("test_set.csv")
cor(train$quantity, train$cost)
cor(train$min_order_quantity, train$cost)
cor(train$supplier, train$cost)
install.packages("lubridate")
library(lubridate)
date(train$quote_date)
month(train$quote_date)
train$quoteyear = year(train$quote_date)
train$quote_year = year(train$quote_date)
train$quote_month = month(train$quote_date)
train$quote_day = day(train$quote_date)
cor(train$quote_year, train$cost)
cor(train$quote_month, train$cost)
cor(train$quote_day, train$cost)
train$quoteyear = NULL
View(train)
View(train)
